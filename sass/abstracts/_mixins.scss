$breakpoints: (
    "phone":        400px,
    "phone-wide":   480px,
    "phablet":      560px,
    "tablet-small": 640px,
    "tablet":       768px,
    "tablet-wide":  1024px,
    "desktop":      1248px,
    "desktop-wide": 1440px
);
@mixin mq($width, $type: min) {
    @if map_has_key($breakpoints, $width) {
        $width: map_get($breakpoints, $width);
        @if $type == max {
            $width: $width - 1px;
        }
        @media only screen and (#{$type}-width: $width) {
            @content;
        }
    }
}

@mixin box($width, $height: $width) {
    width: $width;
    height: $height;
  }

  @mixin flex-config($justify-content: false, $flex: false, $flex-direction: false, $align-items: false) {
    display: flex;
    
    @if $justify-content != false {
      justify-content: $justify-content;
    }
    
    @if $flex != false {
      flex: $flex;
    }
    
    @if $flex-direction != false {
      flex-direction: $flex-direction;
    }
    
    @if $align-items != false {
      align-items: $align-items;
    }
  }


  @mixin pseudo(
  $width: 100%,
  $height: 100%,
  $display: inline-block,
  $pos: absolute,
  $content: ""
) {
  content: $content;
  display: $display;
  position: $pos;
  @include box($width, $height);
}


@mixin center($position) {
    position: absolute;
    
    @if $position == 'vertical' {
      top: 50%;
      -webkit-transform: translateY(-50%);
      -ms-transform: translateY(-50%);
      transform: translateY(-50%);
    }
    @else if $position == 'horizontal' {
      left: 50%;
      -webkit-transform: translateX(-50%);
      -ms-transform: translateX(-50%);
      transform: translate(-50%);
    }
    @else if $position == 'both' {
      top: 50%;
      left: 50%;
      -webkit-transform: translate(-50%, -50%);
      -ms-transform: translate(-50%, -50%);
      transform: translate(-50%, -50%);
    }
  }


  @mixin keyframes($animation-name) {
    @-webkit-keyframes #{$animation-name} {
        @content;
    }
    @-moz-keyframes #{$animation-name} {
        @content;
    }  
    @-ms-keyframes #{$animation-name} {
        @content;
    }
    @-o-keyframes #{$animation-name} {
        @content;
    }  
    @keyframes #{$animation-name} {
        @content;
    }
}
@mixin animation($str) {
  -webkit-animation: #{$str};
  -moz-animation: #{$str};
  -ms-animation: #{$str};
  -o-animation: #{$str};
  animation: #{$str};      
}

@mixin flex-col() {
  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
}
@mixin flex-row() {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
}

@mixin transition($type : all, $duration : 400ms ,$method :ease) {
    transition: $type $duration $method;
}


  // theme toggling 
  $themes: (
    dark: (
      'bg-color': $main_bg_color,
      'main-text': $primary_white_text,
      'second-text': $dark_decondary_text_color,
    ),
    light: (
      'bg-color':  $dark_bg_color,
      'main-text': $dark_primary_text_color,
      'second-text': $dark_decondary_text_color
    )
  );
  
  @mixin themed() {
    @each $theme, $map in $themes {
      .#{$theme} & {
        $theme-map: () !global;
        @each $key, $submap in $map {
          $value: map-get(map-get($themes, $theme), '#{$key}');
          $theme-map: map-merge($theme-map, ($key: $value)) !global;
        }
        @content;
        $theme-map: null !global;
      }
    }
  }
  
  @function toggle-theme($key) {
    @return map-get($theme-map, $key);
  }